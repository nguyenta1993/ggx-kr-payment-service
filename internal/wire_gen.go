// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package internal

import (
	"github.com/gogovan/ggx-kr-payment-service/config"
	"github.com/gogovan/ggx-kr-payment-service/database"
	"github.com/gogovan/ggx-kr-payment-service/internal/api"
	"github.com/gogovan/ggx-kr-payment-service/internal/api/http"
	"github.com/gogovan/ggx-kr-payment-service/internal/application/payment"
	"github.com/gogovan/ggx-kr-payment-service/internal/validation"
	"github.com/gogovan/ggx-kr-service-utils/logger"
	"github.com/google/wire"
)

// Injectors from wire.go:

func InitializeContainer(appCfg *config.AppConfig, logger2 logger.Logger, db database.ReadDb) *api.ApiContainer {
	server := http.NewServer(logger2, appCfg)
	validationRulesEngine := validation.NewValidationRulesEngine()
	apiContainer := api.NewApiContainer(server, validationRulesEngine)
	return apiContainer
}

// wire.go:

var container = wire.NewSet(api.NewApiContainer)

var apiSet = wire.NewSet(http.NewServer, validation.NewValidationRulesEngine)

var httpHandlerSet = wire.NewSet()

var specificServiceSet = wire.NewSet(payment.NewService)

var handlerSet = wire.NewSet()

var infraSets = wire.NewSet()
