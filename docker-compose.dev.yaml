version: '3.8'

services:
  base-service-server:
    build:
      context: .
      dockerfile: deployment/local/Dockerfile
    container_name: base-service-server
    ports:
      - 5000:5000
      - 5001:5001
    depends_on:
      - readDb
      - writeDb

  readDb:
    image: mysql
    container_name: readDb
    command: --default-authentication-plugin=mysql_native_password
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: admin
    ports:
      - 3306:3306

  writeDb:
    image: mysql
    container_name: writeDb
    command: --default-authentication-plugin=mysql_native_password
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: admin
    ports:
      - 3307:3306

  jaeger:
    container_name: base_jaeger_container
    restart: always
    image: jaegertracing/all-in-one:1.21
    environment:
      - COLLECTOR_ZIPKIN_HTTP_PORT=9411
    ports:
      - "5775:5775/udp"
      - "6831:6831/udp"
      - "6832:6832/udp"
      - "5778:5778"
      - "16686:16686"
      - "14268:14268"
      - "14250:14250"
      - "9411:9411"

  # zoo1:
  #   image: zookeeper:3.4.9
  #   restart: always
  #   hostname: zoo1
  #   ports:
  #     - "2181:2181"
  #   environment:
  #     ZOO_MY_ID: 1
  #     ZOO_PORT: 2181
  #     ZOO_SERVERS: server.1=zoo1:2888:3888
  #   volumes:
  #     - ./zk-single-kafka-single/zoo1/data:/data
  #     - ./zk-single-kafka-single/zoo1/datalog:/datalog

  # kafka1:
  #   image: confluentinc/cp-kafka:5.5.1
  #   restart: always
  #   hostname: kafka1
  #   ports:
  #     - "9092:9092"
  #     - "9999:9999"
  #   environment:
  #     KAFKA_ADVERTISED_LISTENERS: LISTENER_DOCKER_INTERNAL://kafka1:19092,LISTENER_DOCKER_EXTERNAL://${DOCKER_HOST_IP:-host.docker.internal}:9092
  #     KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_DOCKER_INTERNAL:PLAINTEXT,LISTENER_DOCKER_EXTERNAL:PLAINTEXT
  #     KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_DOCKER_INTERNAL
  #     KAFKA_ZOOKEEPER_CONNECT: "zoo1:2181"
  #     KAFKA_BROKER_ID: 1
  #     KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
  #     KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
  #     KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
  #     KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
  #     KAFKA_JMX_PORT: 9999
  #     KAFKA_JMX_HOSTNAME: ${DOCKER_HOST_IP:-host.docker.internal}
  #   volumes:
  #     - ./zk-single-kafka-single/kafka1/data:/var/lib/kafka/data
  #   depends_on:
  #     - zoo1

  redis:
    image: redis:6-alpine
    restart: always
    container_name: user_service_redis
    ports:
      - "6379:6379"

  prometheus:
    image: prom/prometheus:latest
    container_name: user_service_prometheus
    restart: always
    ports:
      - "9090:9090"
    command:
      - --config.payment=/etc/prometheus/prometheus.yml
    volumes:
      - ./config/dev/prometheus.yml:/etc/prometheus/prometheus.yml:ro

  node_exporter:
    container_name: user_service_node_exporter_container
    restart: always
    image: prom/node-exporter
    ports:
      - '9100:9100'

  grafana:
    container_name: user_service_grafana_container
    restart: always
    image: grafana/grafana
    ports:
      - '3000:3000'

